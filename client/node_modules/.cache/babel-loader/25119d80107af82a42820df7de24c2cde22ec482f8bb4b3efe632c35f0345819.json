{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cupid\\\\New folder (2)\\\\Projects\\\\pomodoro-app\\\\client\\\\src\\\\pages\\\\SignUpPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { signupUser } from '../services/authServices';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const validateUsername = username => {\n    // Username must be 3-20 characters long and alphanumeric\n    const regex = /^[a-zA-Z0-9]{3,20}$/;\n    return regex.test(username);\n  };\n  const validatePassword = password => {\n    // Password must be at least 8 characters long\n    return password.length >= 8;\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    setError('');\n    if (!validateUsername(username)) {\n      setError('Username must be 3-20 characters long and alphanumeric.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setError('Password must be at least 8 characters long.');\n      return;\n    }\n\n    // Proceed with signup\n    const response = await fetch('/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      const data = await response.json();\n      setError(data.error);\n    } else {\n      alert('Signup successful!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSignup,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupPage, \"0KsGLZXo/mjySFxPmJWzN9kzz8k=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","signupUser","useNavigate","jsxDEV","_jsxDEV","SignupPage","_s","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","navigate","validateUsername","regex","test","validatePassword","length","handleSignup","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Cupid/New folder (2)/Projects/pomodoro-app/client/src/pages/SignUpPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { signupUser } from '../services/authServices';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignupPage = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  \r\n  const validateUsername = (username) => {\r\n    // Username must be 3-20 characters long and alphanumeric\r\n    const regex = /^[a-zA-Z0-9]{3,20}$/;\r\n    return regex.test(username);\r\n};\r\n\r\nconst validatePassword = (password) => {\r\n    // Password must be at least 8 characters long\r\n    return password.length >= 8;\r\n};\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        if (!validateUsername(username)) {\r\n            setError('Username must be 3-20 characters long and alphanumeric.');\r\n            return;\r\n        }\r\n\r\n        if (!validatePassword(password)) {\r\n            setError('Password must be at least 8 characters long.');\r\n            return;\r\n        }\r\n\r\n        // Proceed with signup\r\n        const response = await fetch('/api/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const data = await response.json();\r\n            setError(data.error);\r\n        } else {\r\n            alert('Signup successful!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSignup}>\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n            />\r\n            {error && <div style={{ color: 'red' }}>{error}</div>}\r\n            <button type=\"submit\">Sign Up</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}