{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cupid\\\\New folder (2)\\\\Projects\\\\pomodoro-app\\\\client\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\n// Settings.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  onCustomSet\n}) => {\n  _s();\n  const [customWorkMinutes, setCustomWorkMinutes] = useState(\"\");\n  const [customBreakMinutes, setCustomBreakMinutes] = useState(\"\");\n  const handleCustomTimerSet = () => {\n    const customWork = parseInt(customWorkMinutes) || 25; // Default to 25 if invalid\n    const customBreak = parseInt(customBreakMinutes) || 5; // Default to 5 if invalid\n    onCustomSet(customWork, customBreak);\n    setCustomWorkMinutes(\"\");\n    setCustomBreakMinutes(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Custom Timers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Custom Work Minutes\",\n      value: customWorkMinutes,\n      onChange: e => setCustomWorkMinutes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Custom Break Minutes\",\n      value: customBreakMinutes,\n      onChange: e => setCustomBreakMinutes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCustomTimerSet,\n      children: \"Set Custom Timers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"I2ZafF7tBNZ9prtPaluQpOgQpCg=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","onCustomSet","_s","customWorkMinutes","setCustomWorkMinutes","customBreakMinutes","setCustomBreakMinutes","handleCustomTimerSet","customWork","parseInt","customBreak","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Cupid/New folder (2)/Projects/pomodoro-app/client/src/components/Settings.js"],"sourcesContent":["// Settings.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst Settings = ({ onCustomSet }) => {\r\n  const [customWorkMinutes, setCustomWorkMinutes] = useState(\"\");\r\n  const [customBreakMinutes, setCustomBreakMinutes] = useState(\"\");\r\n\r\n  const handleCustomTimerSet = () => {\r\n    const customWork = parseInt(customWorkMinutes) || 25; // Default to 25 if invalid\r\n    const customBreak = parseInt(customBreakMinutes) || 5; // Default to 5 if invalid\r\n    onCustomSet(customWork, customBreak);\r\n    setCustomWorkMinutes(\"\");\r\n    setCustomBreakMinutes(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Set Custom Timers</h2>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Custom Work Minutes\"\r\n        value={customWorkMinutes}\r\n        onChange={(e) => setCustomWorkMinutes(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Custom Break Minutes\"\r\n        value={customBreakMinutes}\r\n        onChange={(e) => setCustomBreakMinutes(e.target.value)}\r\n      />\r\n      <button onClick={handleCustomTimerSet}>Set Custom Timers</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,UAAU,GAAGC,QAAQ,CAACN,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,MAAMO,WAAW,GAAGD,QAAQ,CAACJ,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IACvDJ,WAAW,CAACO,UAAU,EAAEE,WAAW,CAAC;IACpCN,oBAAoB,CAAC,EAAE,CAAC;IACxBE,qBAAqB,CAAC,EAAE,CAAC;EAC3B,CAAC;EAED,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MACEiB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAEf,iBAAkB;MACzBgB,QAAQ,EAAGC,CAAC,IAAKhB,oBAAoB,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACFhB,OAAA;MACEiB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEb,kBAAmB;MAC1Bc,QAAQ,EAAGC,CAAC,IAAKd,qBAAqB,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACFhB,OAAA;MAAQuB,OAAO,EAAEf,oBAAqB;MAAAI,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BIF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}