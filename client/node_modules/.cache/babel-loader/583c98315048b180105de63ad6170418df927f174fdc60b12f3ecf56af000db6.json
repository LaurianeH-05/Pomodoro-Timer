{"ast":null,"code":"import axios from 'axios';\n\n// Replace with your backend API URL\nconst API_URL = 'http://localhost:5000/api';\n\n// Login user with real backend\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('token', token); // Store the token locally\n    return {\n      token,\n      user\n    }; // Return the user data and token\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n};\n\n// Sign up new user with real backend\nexport const signupUser = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/signup`, {\n      username,\n      password\n    });\n    return response.data; // Return user data or token from the server\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed');\n  }\n};","map":{"version":3,"names":["axios","API_URL","loginUser","email","password","response","post","token","user","data","localStorage","setItem","error","_error$response","_error$response$data","Error","message","signupUser","username","_error$response2","_error$response2$data"],"sources":["C:/Users/Cupid/New folder (2)/Projects/pomodoro-app/client/src/services/authServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Replace with your backend API URL\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Login user with real backend\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    const { token, user } = response.data;\r\n    localStorage.setItem('token', token); // Store the token locally\r\n    return { token, user }; // Return the user data and token\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Login failed');\r\n  }\r\n};\r\n\r\n// Sign up new user with real backend\r\nexport const signupUser = async (username, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/signup`, { username, password });\r\n    return response.data; // Return user data or token from the server\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Signup failed');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,MAAM;MAAEG,KAAK;MAAEC;IAAK,CAAC,GAAGH,QAAQ,CAACI,IAAI;IACrCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC,CAAC;IACtC,OAAO;MAAEA,KAAK;MAAEC;IAAK,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,cAAc,CAAC;EAClE;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEd,QAAQ,KAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,SAAS,EAAE;MAAEiB,QAAQ;MAAEd;IAAS,CAAC,CAAC;IAC9E,OAAOC,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAO,gBAAA,EAAAC,qBAAA;IACd,MAAM,IAAIL,KAAK,CAAC,EAAAI,gBAAA,GAAAP,KAAK,CAACP,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBJ,OAAO,KAAI,eAAe,CAAC;EACnE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}